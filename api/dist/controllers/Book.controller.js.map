{"version":3,"sources":["../../src/controllers/Book.controller.js"],"names":["getBooks","req","res","books","Book","find","genero","params","json","getBookId","bookId","findById","id","status","createBook","book","findOne","name","body","message","newBook","newBookSave","save","updateBook","bookUpdate","findByIdAndUpdate","new","deleteBook","bookDelete","findByIdAndDelete"],"mappings":";;;;;;;AAAA;;;;AAEO,MAAMA,QAAQ,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC1C,QAAMC,KAAK,GAAG,MAAMC,cAAKC,IAAL,CAAU;AAAEC,IAAAA,MAAM,EAAEL,GAAG,CAACM,MAAJ,CAAWD;AAArB,GAAV,CAApB;AACA,SAAOJ,GAAG,CAACM,IAAJ,CAASL,KAAT,CAAP;AACD,CAHM;;;;AAKA,MAAMM,SAAS,GAAG,OAAOR,GAAP,EAAYC,GAAZ,KAAoB;AAC3C,QAAMQ,MAAM,GAAG,MAAMN,cAAKO,QAAL,CAAcV,GAAG,CAACM,MAAJ,CAAWK,EAAzB,CAArB;AACA,MAAI,CAACF,MAAL,EAAa,OAAOR,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,EAAP;AACb,SAAON,GAAG,CAACM,IAAJ,CAASE,MAAT,CAAP;AACD,CAJM;;;;AAMA,MAAMI,UAAU,GAAG,OAAOb,GAAP,EAAYC,GAAZ,KAAoB;AAC5C,QAAMa,IAAI,GAAG,MAAMX,cAAKY,OAAL,CAAa;AAAEC,IAAAA,IAAI,EAAEhB,GAAG,CAACiB,IAAJ,CAASD;AAAjB,GAAb,CAAnB;;AACA,MAAIF,IAAJ,EAAU;AACR,WAAOb,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,CAAqB;AAAEW,MAAAA,OAAO,EAAE;AAAX,KAArB,CAAP;AACD;;AACD,QAAMC,OAAO,GAAG,IAAIhB,aAAJ,CAASH,GAAG,CAACiB,IAAb,CAAhB;AACA,QAAMG,WAAW,GAAG,MAAMD,OAAO,CAACE,IAAR,EAA1B;AACA,SAAOpB,GAAG,CAACM,IAAJ,CAASa,WAAT,CAAP;AACD,CARM;;;;AAUA,MAAME,UAAU,GAAG,OAAOtB,GAAP,EAAYC,GAAZ,KAAoB;AAC5C,QAAMsB,UAAU,GAAG,MAAMpB,cAAKqB,iBAAL,CAAuBxB,GAAG,CAACM,MAAJ,CAAWK,EAAlC,EAAsCX,GAAG,CAACiB,IAA1C,EAAgD;AACvEQ,IAAAA,GAAG,EAAE;AADkE,GAAhD,CAAzB;AAGAxB,EAAAA,GAAG,CAACM,IAAJ,CAASgB,UAAT;AACD,CALM;;;;AAOA,MAAMG,UAAU,GAAG,OAAO1B,GAAP,EAAYC,GAAZ,KAAoB;AAC5C,QAAM0B,UAAU,GAAG,MAAMxB,cAAKyB,iBAAL,CAAuB5B,GAAG,CAACM,MAAJ,CAAWK,EAAlC,CAAzB;AACA,MAAI,CAACgB,UAAL,EAAiB,OAAO1B,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,EAAP;AACjB,SAAON,GAAG,CAACM,IAAJ,CAASoB,UAAT,CAAP;AACD,CAJM","sourcesContent":["import Book from \"../models/Book\";\r\n\r\nexport const getBooks = async (req, res) => {\r\n  const books = await Book.find({ genero: req.params.genero });\r\n  return res.json(books);\r\n};\r\n\r\nexport const getBookId = async (req, res) => {\r\n  const bookId = await Book.findById(req.params.id);\r\n  if (!bookId) return res.status(204).json();\r\n  return res.json(bookId);\r\n};\r\n\r\nexport const createBook = async (req, res) => {\r\n  const book = await Book.findOne({ name: req.body.name });\r\n  if (book) {\r\n    return res.status(301).json({ message: \"The book already exists \" });\r\n  }\r\n  const newBook = new Book(req.body);\r\n  const newBookSave = await newBook.save();\r\n  return res.json(newBookSave);\r\n};\r\n\r\nexport const updateBook = async (req, res) => {\r\n  const bookUpdate = await Book.findByIdAndUpdate(req.params.id, req.body, {\r\n    new: true,\r\n  });\r\n  res.json(bookUpdate);\r\n};\r\n\r\nexport const deleteBook = async (req, res) => {\r\n  const bookDelete = await Book.findByIdAndDelete(req.params.id);\r\n  if (!bookDelete) return res.status(204).json();\r\n  return res.json(bookDelete);\r\n};\r\n"],"file":"Book.controller.js"}